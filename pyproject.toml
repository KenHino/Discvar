[tool.poetry]
name = "discvar"
version = "0.0.0"
description = "Discrete Variable Representation (DVR) library"
authors = ["KenHino <hino@theoc.kuchem.kyoto-u.ac.jp>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.26.4"
scipy = "^1.13.1"
matplotlib = "^3.9.0"
pybind11 = "^2.12.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-xdist = "^3.6.1"
jupyterlab = "^4.1.6"
pre-commit = "^3.7.0"
mypy = "^1.9.0"
ruff = "^0.3.5"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
myst-parser = "^2.0.0"
nbsphinx = "^0.9.3"
sphinx-copybutton = "^0.5.2"
sphinx-rtd-theme = "^2.0.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-xdist = "^3.6.1"

[tool.ruff]
line-length = 80
target-version = "py310"
extend-include = ["*.ipynb"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
select = [
  # list of rules are available at https://beta.ruff.rs/docs/rules/
  "E",  # pycodestyle (error)
  "W",  # pycodestyle (warning)
  "F",  # Pyflakes
  "B",  # flake8-bugbear
  "I",  # isort
]
ignore = [
  "B018", # useless-expression
  "E731", # do not assign a lambda expression, use a def
]

[tool.mypy]
strict = false
check_untyped_defs = true
no_implicit_optional = true
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = true
ignore_missing_imports = true
disallow_untyped_calls = false


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
